# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Prod Build 7x

on:
  push:
    branches: [ "build_7x" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout 7x branch
      uses: actions/checkout@v4
      with:
        ref: 'dspace-7_x'

    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn package

    - name: get semantic tag version and release notes from commit messages
      id: tag
      run: |
        curtag=${GITHUB_REF_NAME}
        major_minor=$(echo "$curtag" | cut -d'.' -f1-2)
        patch=$(echo "$curtag" | cut -d'.' -f3)
        # avoid empty patch number
        [ -n "$patch" ] && ((patch--)) || patch=".x"
        prevtag="${major_minor}.${patch}"
        echo "" > body.log
        if git tag | grep $prevtag ; then
          git log -q ${curtag}...${prevtag} --pretty="- %s" -q --no-color >> body.log
        else
          git log --pretty="- %s" -q --no-color >> body.log
        fi
        line_count=$(cat body.log | wc -l)
        echo "curtag=$curtag" >> $GITHUB_OUTPUT
        echo "prevtag=$prevtag" >> $GITHUB_OUTPUT
        echo "line_count=$line_count" >> $GITHUB_OUTPUT

    - name: Release builds
      uses: ncipollo/release-action@v1
      with:
        name: ${{ env.GITHUB_REF_NAME }}
        tag: ${{ env.GITHUB_REF_NAME }}
        artifacts: "dspace/target/"
        bodyFile: "body.log"
        token: ${{ secrets.GITHUB_TOKEN }}

#    - name: Upload Prod Build Target
#      uses: actions/upload-artifact@v4
#      with:
#        name: Target build
#        path: "dspace/target/"
